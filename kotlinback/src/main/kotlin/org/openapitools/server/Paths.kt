/**
* API
* UI API
*
* The version of the OpenAPI document: v1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server

import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.Location

object Paths {
    /**
     * 
     * 
     * @param symbol  
     * @param timeframe  
     * @param fromDate filter by date gte (optional)
     * @param toDate filter by date lte (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/candles/{timeframe}/{symbol}/") class candlesRead(val symbol: kotlin.String, val timeframe: kotlin.String, val fromDate: java.time.LocalDate? = null, val toDate: kotlin.String? = null)

    /**
     * 
     * 
     * @param portfolio  
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/available-instruments-meta/") class portfoliosAvailableInstrumentsMetaList(val portfolio: kotlin.String)

    /**
     * 
     * 
     * @param portfolio  
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/available-tags/") class portfoliosAvailableTagsList(val portfolio: kotlin.String)

    /**
     * 
     * 
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/") class portfoliosList()

    /**
     * 
     * 
     * @param portfolio  
     * @param symbol filter by symbol (optional)
     * @param sector filter by sector (optional)
     * @param industry filter by industry (optional)
     * @param exchange filter by exchange (optional)
     * @param country filter by country (optional)
     * @param fromDate filter by date gte (optional)
     * @param toDate filter by date lte (optional)
     * @param fromTimeOfDay filter by time of a day gte (optional)
     * @param toTimeOfDay filter by time of a day lte (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/results/by-filter/") class portfoliosResultsByFilterList(val portfolio: kotlin.String, val symbol: kotlin.String? = null, val sector: kotlin.String? = null, val industry: kotlin.String? = null, val exchange: kotlin.String? = null, val country: kotlin.String? = null, val fromDate: java.time.LocalDate? = null, val toDate: kotlin.String? = null, val fromTimeOfDay: kotlin.String? = null, val toTimeOfDay: kotlin.String? = null)

    /**
     * 
     * 
     * @param portfolio  
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/results/") class portfoliosResultsList(val portfolio: kotlin.String)

    /**
     * 
     * 
     * @param aggregate  
     * @param portfolio  
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/results/{aggregate}/") class portfoliosResultsRead(val aggregate: kotlin.String, val portfolio: kotlin.String)

    /**
     * 
     * 
     * @param portfolio  
     */
    @KtorExperimentalLocationsAPI
    @Location("/portfolios/{portfolio}/trades/") class portfoliosTradesList(val portfolio: kotlin.String)

    /**
     * 
     * 
     */
    @KtorExperimentalLocationsAPI
    @Location("/quotes/daily/") class quotesDailyList()

    /**
     * 
     * 
     * @param id A unique integer value identifying this candles daily. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/quotes/daily/{id}/") class quotesDailyRead(val id: kotlin.Int)

}
