/**
 * API
 * UI API
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.server.apis

import com.google.gson.Gson
import firelib.core.SourceName
import firelib.core.domain.Interval
import firelib.core.misc.atMoscow
import firelib.core.misc.moscowZoneId
import firelib.core.store.MdStorageImpl
import io.ktor.application.call
import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.get
import io.ktor.response.respondText
import io.ktor.routing.Route

import org.openapitools.server.Paths


import org.openapitools.server.models.Candle
import java.time.LocalDateTime
import java.time.ZoneId
import java.time.format.DateTimeFormatter

@KtorExperimentalLocationsAPI
fun Route.CandlesApi() {
    val gson = Gson()
    get<Paths.candlesRead> { cl: Paths.candlesRead ->
        val storage = MdStorageImpl()
        val dao = storage.md.getDao(SourceName.FINAM, Interval.Min10)
        val ohlcs = dao.queryAll(cl.symbol.replace(".MICEX", ""), LocalDateTime.now().minusDays(300))

        //"2000-01-23T04:56:07.000+00:00",

        val candles = ohlcs.map {
            Candle(
                it.endTime.atMoscow().atZone(moscowZoneId).format(DateTimeFormatter.ISO_OFFSET_DATE_TIME),
                it.open.toBigDecimal(),
                it.high.toBigDecimal(),
                it.low.toBigDecimal(),
                it.close.toBigDecimal(),
                it.volume.toInt()
            )
        }
        call.respondText(gson.toJson(candles))
    }

}
