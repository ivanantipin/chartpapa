First time when I heard about agile programming approach was in 2000x something,
I had quick glance at it and it passed along without big impact on how I organize my work.

In the past few years, I noticed that scrumy-agility got the new momentum,
that could be just my subjective perception though.

Scum mastering became a "profession", so people seriously do a full time work doing this.

Personally I was always skeptical about the religion of scrum, especially if it was viewed as a silver bullet.

So full time scrum masters fluttered around with clever faces, they were harmless like butterflies, but I do not like idlers
and I spent some spare time thinking about the nature of this anomaly, why it gets more attention than it deserves to.

Here you are, my pure subjective conclusion about reasoning of that ..

It all starts from so called "senior management".

Lets make a mind experiment and picture ordinary "senior management" in ordinary organization.

These people are usually distinguished from others by sweet speaking, excellent diagrams drawing and working the angles,
but, as you may notice, software making is not in this skills list.

When such a "manager" got piece of IT in his area of responsibility
he starts scratching his head and thinking about what to do next about it.

Then, he usually comes with a brilliant idea, to abstract himself from nerdy programmers with an intelligent layer
presented by all sorts of masters: scrum, agile, yoda,enterprise architects, etc.

Main purpose of this layer is to translate binary thoughts of IT into something understandable
i.e. powerpoint presentations, jira reports etc.

Bingo! the problem is solved, HRs hires scrum masters and they rushes fixing the problem,

senior managers get what they used to digest - power points, sexy charts and diagrams.

There is small problem that usually come to the scene,

this new "intelligent layer" unfortunately understands in no way more than the notorious "senior management" in software making.

From my experience scrum masters could be anything from taxi driver to ex-managers, but they never are close to core IT.

Those education usually consists of some sort of "short agile/scrum master course" and here you are,
brand new agile master looking for new challenge.

There is zero profit in described setup, the abstraction layer usually acts as Chinese whispers,
it just add additional entropy into play.

So if your IT is already fucked then scrum plugin would just add some more mess and formalities, you better
fix IT in that case,
in case of shiny IT experienced peoplo knows how to organize
release cycles, planning, risk management etc, and additional scrum yoda would
just play stupid ( I saw it many times ) in best case and in worst case would
bother developers with stupid catchup meetings trying to get the clue.

I have never witnessed scrum mastering solving real big problems, at the same time I
saw many times when a modest programmer, like me, saved relatively big projects from total fuck up.



Bottom line if you want to fix your it just hire good programmers do not try to look solution in scrum,
all experienced guys have already

If the IT stuff is shit, then no one scrum master would pull out - shit-in-shit-out as they say.

Some time in future I will may write small article about "pure" architects, they also funny creatures in the landscape
of mediocre IT.

