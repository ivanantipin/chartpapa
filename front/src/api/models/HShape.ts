/* tslint:disable */
/* eslint-disable */
/**
 * demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HPoint,
    HPointFromJSON,
    HPointFromJSONTyped,
    HPointToJSON,
} from './';

/**
 * 
 * @export
 * @interface HShape
 */
export interface HShape {
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    fill?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    stroke?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HShape
     */
    strokeWidth?: number | null;
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    dashStyle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    markerEnd?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HShape
     */
    markerStart?: string | null;
    /**
     * 
     * @type {Array<HPoint>}
     * @memberof HShape
     */
    points?: Array<HPoint> | null;
    /**
     * 
     * @type {number}
     * @memberof HShape
     */
    height?: number | null;
}

export function HShapeFromJSON(json: any): HShape {
    return HShapeFromJSONTyped(json, false);
}

export function HShapeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HShape {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fill': !exists(json, 'fill') ? undefined : json['fill'],
        'stroke': !exists(json, 'stroke') ? undefined : json['stroke'],
        'strokeWidth': !exists(json, 'strokeWidth') ? undefined : json['strokeWidth'],
        'dashStyle': !exists(json, 'dashStyle') ? undefined : json['dashStyle'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'markerEnd': !exists(json, 'markerEnd') ? undefined : json['markerEnd'],
        'markerStart': !exists(json, 'markerStart') ? undefined : json['markerStart'],
        'points': !exists(json, 'points') ? undefined : (json['points'] === null ? null : (json['points'] as Array<any>).map(HPointFromJSON)),
        'height': !exists(json, 'height') ? undefined : json['height'],
    };
}

export function HShapeToJSON(value?: HShape | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fill': value.fill,
        'stroke': value.stroke,
        'strokeWidth': value.strokeWidth,
        'dashStyle': value.dashStyle,
        'type': value.type,
        'markerEnd': value.markerEnd,
        'markerStart': value.markerStart,
        'points': value.points === undefined ? undefined : (value.points === null ? null : (value.points as Array<any>).map(HPointToJSON)),
        'height': value.height,
    };
}


