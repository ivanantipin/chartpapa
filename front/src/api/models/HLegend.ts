/* tslint:disable */
/* eslint-disable */
/**
 * demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HLegend
 */
export interface HLegend {
    /**
     * 
     * @type {boolean}
     * @memberof HLegend
     */
    floating?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof HLegend
     */
    layout?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HLegend
     */
    borderWidth?: number | null;
    /**
     * 
     * @type {string}
     * @memberof HLegend
     */
    borderColor?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HLegend
     */
    align?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HLegend
     */
    x?: number | null;
    /**
     * 
     * @type {string}
     * @memberof HLegend
     */
    verticalAlign?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HLegend
     */
    y?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof HLegend
     */
    enabled?: boolean;
}

export function HLegendFromJSON(json: any): HLegend {
    return HLegendFromJSONTyped(json, false);
}

export function HLegendFromJSONTyped(json: any, ignoreDiscriminator: boolean): HLegend {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'floating': !exists(json, 'floating') ? undefined : json['floating'],
        'layout': !exists(json, 'layout') ? undefined : json['layout'],
        'borderWidth': !exists(json, 'borderWidth') ? undefined : json['borderWidth'],
        'borderColor': !exists(json, 'borderColor') ? undefined : json['borderColor'],
        'align': !exists(json, 'align') ? undefined : json['align'],
        'x': !exists(json, 'x') ? undefined : json['x'],
        'verticalAlign': !exists(json, 'verticalAlign') ? undefined : json['verticalAlign'],
        'y': !exists(json, 'y') ? undefined : json['y'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
    };
}

export function HLegendToJSON(value?: HLegend | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'floating': value.floating,
        'layout': value.layout,
        'borderWidth': value.borderWidth,
        'borderColor': value.borderColor,
        'align': value.align,
        'x': value.x,
        'verticalAlign': value.verticalAlign,
        'y': value.y,
        'enabled': value.enabled,
    };
}


