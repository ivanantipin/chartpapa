/* tslint:disable */
/* eslint-disable */
/**
 * demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContinuousMeta,
    ContinuousMetaFromJSON,
    ContinuousMetaFromJSONTyped,
    ContinuousMetaToJSON,
    DiscreteMeta,
    DiscreteMetaFromJSON,
    DiscreteMetaFromJSONTyped,
    DiscreteMetaToJSON,
} from './';

/**
 * 
 * @export
 * @interface PortfolioInstrumentsMeta
 */
export interface PortfolioInstrumentsMeta {
    /**
     * 
     * @type {Array<ContinuousMeta>}
     * @memberof PortfolioInstrumentsMeta
     */
    continuousMetas: Array<ContinuousMeta>;
    /**
     * 
     * @type {Array<DiscreteMeta>}
     * @memberof PortfolioInstrumentsMeta
     */
    discreteMetas: Array<DiscreteMeta>;
}

export function PortfolioInstrumentsMetaFromJSON(json: any): PortfolioInstrumentsMeta {
    return PortfolioInstrumentsMetaFromJSONTyped(json, false);
}

export function PortfolioInstrumentsMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioInstrumentsMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'continuousMetas': ((json['continuousMetas'] as Array<any>).map(ContinuousMetaFromJSON)),
        'discreteMetas': ((json['discreteMetas'] as Array<any>).map(DiscreteMetaFromJSON)),
    };
}

export function PortfolioInstrumentsMetaToJSON(value?: PortfolioInstrumentsMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'continuousMetas': ((value.continuousMetas as Array<any>).map(ContinuousMetaToJSON)),
        'discreteMetas': ((value.discreteMetas as Array<any>).map(DiscreteMetaToJSON)),
    };
}


