/* tslint:disable */
/* eslint-disable */
/**
 * demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HTitle,
    HTitleFromJSON,
    HTitleFromJSONTyped,
    HTitleToJSON,
} from './';

/**
 * 
 * @export
 * @interface HAxis
 */
export interface HAxis {
    /**
     * 
     * @type {string}
     * @memberof HAxis
     */
    height: string;
    /**
     * 
     * @type {number}
     * @memberof HAxis
     */
    lineWidth?: number;
    /**
     * 
     * @type {HTitle}
     * @memberof HAxis
     */
    title?: HTitle;
    /**
     * 
     * @type {number}
     * @memberof HAxis
     */
    gapGridLineWidth?: number;
    /**
     * 
     * @type {string}
     * @memberof HAxis
     */
    left?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HAxis
     */
    offset?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof HAxis
     */
    opposite?: boolean | null;
}

export function HAxisFromJSON(json: any): HAxis {
    return HAxisFromJSONTyped(json, false);
}

export function HAxisFromJSONTyped(json: any, ignoreDiscriminator: boolean): HAxis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': json['height'],
        'lineWidth': !exists(json, 'lineWidth') ? undefined : json['lineWidth'],
        'title': !exists(json, 'title') ? undefined : HTitleFromJSON(json['title']),
        'gapGridLineWidth': !exists(json, 'gapGridLineWidth') ? undefined : json['gapGridLineWidth'],
        'left': !exists(json, 'left') ? undefined : json['left'],
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'opposite': !exists(json, 'opposite') ? undefined : json['opposite'],
    };
}

export function HAxisToJSON(value?: HAxis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': value.height,
        'lineWidth': value.lineWidth,
        'title': HTitleToJSON(value.title),
        'gapGridLineWidth': value.gapGridLineWidth,
        'left': value.left,
        'offset': value.offset,
        'opposite': value.opposite,
    };
}


