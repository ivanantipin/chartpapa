/* tslint:disable */
/* eslint-disable */
/**
 * demo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HLabel,
    HLabelFromJSON,
    HLabelFromJSONTyped,
    HLabelToJSON,
    HShape,
    HShapeFromJSON,
    HShapeFromJSONTyped,
    HShapeToJSON,
} from './';

/**
 * 
 * @export
 * @interface HAnnotation
 */
export interface HAnnotation {
    /**
     * 
     * @type {Array<HLabel>}
     * @memberof HAnnotation
     */
    labels: Array<HLabel>;
    /**
     * 
     * @type {Array<HShape>}
     * @memberof HAnnotation
     */
    shapes: Array<HShape>;
}

export function HAnnotationFromJSON(json: any): HAnnotation {
    return HAnnotationFromJSONTyped(json, false);
}

export function HAnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): HAnnotation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'labels': ((json['labels'] as Array<any>).map(HLabelFromJSON)),
        'shapes': ((json['shapes'] as Array<any>).map(HShapeFromJSON)),
    };
}

export function HAnnotationToJSON(value?: HAnnotation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'labels': ((value.labels as Array<any>).map(HLabelToJSON)),
        'shapes': ((value.shapes as Array<any>).map(HShapeToJSON)),
    };
}


