In the past few years, I noticed that the so-called scrum-agile-extreme programming has got a second life.
First time I heard about it at 2000 something, I do not remember actually, I had quick glance and it passed away.
Personally I am skeptical about the religion of scrum, especially if it is viewed as a silver bullet.
For some time I did not pay attention to it, scrum masters fluttered around with clever faces, but in fact they were harmless like butterflies
and that's why I did not bother much.
But eventually it stuck into my head as I do not like idlers and I spent some time thinking about the nature of this anomaly,
why it gets more attention than it deserves to and came to some interesting conclusion...

Here you are..

It all starts from so called "senior management". Let's picture ordinary "senior management" in ordinary organization.

They are usually distinguished from others by sweet speaking, diagrams drawing and working the angles,
but, as you may notice, software making usually absent in those list of skills.

When such a manager got piece of happiness in the form of IT department he starts scratching his head and thinking about what to do about.

Then, he/she usually comes with a brilliant idea, to abstract themselves from stupid programmers with an intelligent layer
presented by all sorts of masters: scram, agile, yoda, you name masters plus enterprise architects who would translate
binary thoughts of IT developers into something understandable i.e. powerpoint presentation.

Bingo! the question is settled, HRs hires scrum masters and they rushing to fix the problem.
and senior managers get what they used to digest - power points, sexy charts and diagrams.

Though there is small problem that slips those attention,

All these scrum idlers unfortunately understand in no way more than the notorious "senior management" in software making.
From my experience they are either failed ex-programmers or product of short courses of "agile mastering" bullshit.

and they, in turn, would not mind abstracting from low-level items, but who would give them.

so they have to dance between their bosses and progs in order to reach out longer, earn more.

There is zero profit in this setup, this abstraction layer usually acts as Chinese whispers ,
in case of success ( thanks to good progs) they are stealing victory and report it with fanfares
otherwise they blame progers, so this is win-win situation for them.


I have never witnessed when a master's scrum really solved problems, at the same time I
witnessed many times when a modest kid, like me, pulled out decent projects over which the

hordes of nedprogs with the skraf of the brotherhood were piling.

#Progs are cracking problems not the scrum musters. If the IT stuff is shit, then no one scrum master would pull out - shit-in-shit-out as they say.

Steve Jobs, by the way, did not hesitate to press the buttons on the iPhone checking whether it is convenient.

In fact, the whole story, the American management model does not work from the word at all.
for those who do not know about this American in which managers are not going through the food chain of the career path,
in contrast to the Japanese.

I'm for the Japanese !!

how can I write about the enterprise architecture of my little football fans.