parallel programming and people management what is common?
surprisingly approach is very similar.

if you imaging that person/developer is thread
then context switch would be extremely expensive in both cases.

try to do 3 tasks in parallel which requires some (diving deep - find synonym here)
and your performance could be decresesed times!!

this is because you brain works well with short term memory ( cache) and
not so good with longer term.

you cant restore task context in a matter of minutes for small tasks
or even hours for bigger task you did not look for few days.


so when we speak about scalability we can use same approaches as in concurrecny programming(CP)


just reduce context switches between people , teams, departments as they all have some kind of
layred memory ( L1, L2 cacheds , RAM) etc.

how to reduce ? API for rescue !! good API and documentation reduces people communication and so context switches.


people assigning to tasks can be done wisely as well. Tasks have to be big enough to grasp the context.








